apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //阿里路由框架配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
                includeCompileClasspath = true
            }
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled true
    }
}

dependencies {
    api fileTree(dir: "libs", include: ["*.jar"])
    //support
    api rootProject.ext.support["support-v4"]
    api rootProject.ext.support["recyclerview-v7"]
    //rxjava
    api rootProject.ext.dependencies.rxjava
    api rootProject.ext.dependencies.rxandroid
    //rx管理View的生命周期
    api(rootProject.ext.dependencies.rxlifecycle) {
        exclude group: 'com.android.support'
    }
    api(rootProject.ext.dependencies["rxlifecycle-components"]) {
        exclude group: 'com.android.support'
    }
    api rootProject.ext.androidx["design"]
    //rxbinding
    api(rootProject.ext.dependencies.rxbinding) {
        exclude group: 'com.android.support'
    }
    //rx权限请求
//    api(rootProject.ext.dependencies.rxpermissions) {
//        exclude group: 'com.android.support'
//    }
    //network
    api rootProject.ext.dependencies.okhttp
    api rootProject.ext.dependencies.retrofit
    api rootProject.ext.dependencies["converter-gson"]
    api rootProject.ext.dependencies["adapter-rxjava"]
    //json解析
    api rootProject.ext.dependencies.gson
    //material-dialogs
    api(rootProject.ext.dependencies["material-dialogs-core"]) {
        exclude group: 'com.android.support'
    }
    api(rootProject.ext.dependencies["material-dialogs-commons"]) {
        exclude group: 'com.android.support'
    }
    //glide图片加载库
    api(rootProject.ext.dependencies.glide) {
        exclude group: 'com.android.support'
    }
    api rootProject.ext.dependencies["glide-transfer"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    //recyclerview的databinding套装
    api(rootProject.ext.dependencies.bindingcollectionadapter) {
        exclude group: 'com.android.support'
    }
    api(rootProject.ext.dependencies["bindingcollectionadapter-recyclerview"]) {
        exclude group: 'com.android.support'
    }
    //Google LiveData和ViewModel组件
    api rootProject.ext.dependencies["lifecycle-extensions"]
    annotationProcessor rootProject.ext.dependencies["lifecycle-compiler"]

    api rootProject.ext.dependencies["toolbar"]
    api rootProject.ext.dependencies["viewpager2"]
    api rootProject.ext.dependencies["navigation"]
    api rootProject.ext.dependencies["refresh-header"]
    api rootProject.ext.dependencies["refresh-footer-ball"]
    api rootProject.ext.dependencies["refresh-footer-classic"]
    api rootProject.ext.dependencies["refresh"]
    api rootProject.ext.dependencies["searchview"]

//    api project(path: ":mvvmhabit")
    api rootProject.ext.androidx["constraintlayout"]
    api rootProject.ext.androidx["appcompat"]
    api rootProject.ext.androidx["junit"]
    api rootProject.ext.androidx["runner"]
    api rootProject.ext.androidx["espresso-core"]
    api rootProject.ext.androidx["lifecycle-extensions"]
    api rootProject.ext.androidx["multidex"]
    api rootProject.ext.androidx["kotlin_lib"]
    api rootProject.ext.androidx["kotlin_core"]

    api rootProject.ext.dependencies["arouter_api"]
    api rootProject.ext.dependencies["arouter_compiler"]
    api rootProject.ext.dependencies["koin_scope"]
    api rootProject.ext.dependencies["koin_viewmodel"]
    api rootProject.ext.dependencies["koin_fragment"]
    api rootProject.ext.dependencies["utils"]
    api rootProject.ext.dependencies["mmkv"]
    api rootProject.ext.dependencies["livebus"]
    api rootProject.ext.dependencies["fragmentationx"]
    api rootProject.ext.dependencies["swipeback"]
    api rootProject.ext.dependencies["permissionx"]
    api rootProject.ext.dependencies["banner"]
    api rootProject.ext.dependencies["toast"]
    api rootProject.ext.dependencies["webview"]
//    api rootProject.ext.dependencies["tablayout"]
    api rootProject.ext.dependencies["autosize"]
    api rootProject.ext.dependencies["xpopup"]
    api rootProject.ext.dependencies["shadowlayout"]
    api rootProject.ext.dependencies["skeleton"]
    api rootProject.ext.dependencies["shimmerlayout"]
//    api rootProject.ext.dependencies["shimmer-recyclerView"]
    api rootProject.ext.dependencies["litepal"]
    api rootProject.ext.dependencies["adapter-helper"]
//    api rootProject.ext.dependencies["animation"]
    debugApi rootProject.ext.dependencies["leakcanary"]

}